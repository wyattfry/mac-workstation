#!/usr/bin/env bash
set -euo pipefail

packages=(
  # BEGINNING_OF_PACKAGES
  1password-cli
  aerospace
  azure-cli
  colima
  discord
  docker
  docker-buildx
  docker-compose
  firefox
  font-meslo-for-powerlevel10k
  fzf
  gh
  go
  graphviz
  jetbrains-toolbox
  jq
  kind
  mitmproxy
  powerlevel10k
  powershell
  rsync
  shellcheck
  shfmt
  sl
  tfenv
  tmux
  visual-studio-code
  yq
  zsh-autosuggestions
  zsh-syntax-highlighting
  # END_OF_PACKAGES
)

taps=(
  domt4/autoupdate
  nikitabobko/tap
)

function install_ohmyzsh() {
  if [[ ! -d ~/.oh-my-zsh ]]; then
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  else
    echo '[✓] oh-my-zsh'
  fi
}

function source_pl10k() {
  if grep powerlevel ~/.zshrc &>/dev/null; then
    echo '[✓] sourcing powerlevel10k theme'
  else
    echo 'source /opt/homebrew/share/powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc
  fi

}

function enable_brew_autoupdate() {
  if brew autoupdate status 2>&1 | grep 'Autoupdate is installed and running.' &>/dev/null; then
    echo "[✓] brew autoupdate"
  else
    brew autoupdate start
  fi
}

function install_homebrew() {
  if which brew &>/dev/null; then
    echo '[✓] homebrew'
  else
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi
}

function install_taps() {
  tapped="$(brew tap)"

  for t in "${taps[@]}"; do
    if echo "${tapped[@]}" | grep -qw "$t"; then
      echo "[✓] tap: $t"
    else
      brew tap "$t" &>/dev/null
    fi
  done
}

function install_brews() {
  installed="$(brew list)"

  for p in "${packages[@]}"; do
    if ! echo "${installed[@]}" | grep -qw "$p"; then
      printf "[ ] brew: Installing %s...\r" "$p"
      brew install "$p" &>/dev/null
    fi
    echo "[✓] brew: $p                      "
  done
}

function ensure_line_in_file() {
  local line="$1"
  local file="$2"
  if grep -qF "$line" "$file"; then
    echo "[✓] $line"
  else
    echo "[✓] $line -- Added"
    echo "$line" >>"$file"
  fi
}

function sort_section() {
  start_line=$1
  end_line=$2
  file=$3
  file_mode=$(stat -f "%Lp" "$file")
  {
      head -n $((start_line - 1)) "$file"   # Print lines before the section
      sed -n "${start_line},${end_line}p" "$file" | sort  # Sort the section
      tail -n +$((end_line + 1)) "$file"   # Print lines after the section
  } > "$file.sorted"  # Save the output to a temporary file
  mv "$file.sorted" "$file"
  chmod "$file_mode" "$file"
}

# Handle 'add' subcommand
if [[ ${1:-null} == 'add' ]]; then
  pkg_to_add="$2"
  installed="$(brew list)"
  if echo "${installed[@]}" | grep -qw "$pkg_to_add"; then
    echo "'$pkg_to_add' is already installed"
    exit
  fi
  if ! brew search "$pkg_to_add" &>/dev/null; then
    echo "Package '$pkg_to_add' not found via Homebrew"
    exit
  fi
  echo "Adding '$pkg_to_add' to the list of packages"
  start_line="$(grep -nm1 BEGINNING_OF_PACKAGES "$0" | cut -d: -f1)"
  end_line="$(grep -nm1 END_OF_PACKAGES "$0" | cut -d: -f1)"
  sed -i '' "${end_line}i\\
  $pkg_to_add\\
" "$0"
  sort_section "$((start_line + 1))" "$end_line" "$0"
  "$0"
  exit
fi

install_homebrew
install_ohmyzsh
enable_brew_autoupdate
install_taps
install_brews

# Use PL10K zsh theme
ensure_line_in_file 'source $HOMEBREW_PREFIX/share/powerlevel10k/powerlevel10k.zsh-theme' ~/.zshrc

# Use Zsh plugins
ensure_line_in_file 'source $HOMEBREW_PREFIX/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh' ~/.zshrc
ensure_line_in_file 'source $HOMEBREW_PREFIX/share/zsh-autosuggestions/zsh-autosuggestions.zsh' ~/.zshrc

# 1Password Shell Completion
ensure_line_in_file 'eval "$(op completion zsh)"; compdef _op op' ~/.zshrc

ensure_line_in_file 'export EDITOR=vim' ~/.zshrc
ensure_line_in_file 'export VISUAL=$EDITOR' ~/.zshrc
